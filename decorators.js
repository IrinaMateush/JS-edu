'use strict';
//замыкания и декораторы 

//есть некая фунция, которая как-то работает, но мы видим только результат..
function foo (arg1, arg2){
    console.log(arg1+arg2);
}

//декоратор позволяет обогатить функцию, не изменяя её работы
//в качестве результата работы обертки должен возвращаться результат исходной функции
function logger (func) {
    return function(...args){ //т.к. мы можем не знать кол-во аргументов
        console.log('Функция' + func.name + '; c параметрами ' + args); 
        return func(...args);
    }
}

// вместо существующей foo используем работу декоратора
// 
let foo = logger(foo);

foo(2,5);

//декоратор вызывается не сразу, а только после вызова исходной функции 
//вызов логгера не приведет к вызову изначальной foo, вызов происходит в замыкании
//мы просто повторяем поведение исходной функции и обогащаем его